
-- поменяем тип столбца, что бы в нем хранить статьи без обработки бейс-64.

ALTER TABLE articles
	ADD COLUMN article_source_tmp bytea;

update articles SET 
	article_source_tmp = decode(article_source, 'base64') ;

 ALTER TABLE articles
	ALTER COLUMN article_source TYPE bytea USING article_source_tmp::bytea; 
	
	
-- вводим понятие "рабочий стол" как таковой  
-- в нем будет ИД, публичный ключ для возможного шифрования данных,
-- и тип стола - или персональный стол автора, или групповой   


DROP SEQUENCE IF EXISTS dt_header_id_seq CASCADE;
CREATE SEQUENCE IF NOT EXISTS dt_header_id_seq;

DROP TYPE IF EXISTS dt_type CASCADE;
CREATE TYPE dt_type AS enum('author','group');


DROP TABLE IF EXISTS dt_header CASCADE;
CREATE TABLE IF NOT EXISTS dt_header (
  dt_header_id int PRIMARY KEY not null,
  dt_header_type dt_type  NOT NULL DEFAULT 'author',
  public_key bytea NOT NULL,
  private_key bytea NOT NULL
);
	
	
CREATE OR REPLACE FUNCTION trigger_dt_header_lns () RETURNS trigger AS $$ 
BEGIN 
      If  NEW.dt_header_id = 0 OR NEW.dt_header_id IS NULL then 
      NEW.dt_header_id = nextval('dt_header_id_seq');
      end if;

return NEW;
END; 
$$ LANGUAGE  plpgsql;

-- Создание триггера
CREATE TRIGGER dt_header_bi 
	BEFORE INSERT ON files FOR EACH ROW 
	EXECUTE PROCEDURE trigger_dt_header_lns ();


CREATE INDEX dt_header_id_ind ON dt_header (dt_header_id);
CREATE INDEX dt_header_type_ind ON dt_header (dt_header_type);

INSERT INTO  dt_header (dt_header_id, dt_header_type, public_key, private_key) VALUES 
(1,	'author',	'12345',	'12345');

DROP SEQUENCE IF EXISTS authors_author_id_seq CASCADE;
DROP TRIGGER IF EXISTS author_bi ON authors CASCADE;

DROP FUNCTION IF EXISTS  trigger_authors_before_lns ();

ALTER TABLE IF EXISTS authors
    RENAME COLUMN author_id TO dt_header_id;
    
ALTER TABLE IF EXISTS authors
	ADD CONSTRAINT authors_dt_header
	FOREIGN KEY ( dt_header_id ) REFERENCES dt_header ( dt_header_id ); 
	
--
--	
DROP SEQUENCE IF EXISTS groups_group_id_seq CASCADE;
	
DROP TRIGGER IF EXISTS groups_bi ON groups CASCADE;


DROP FUNCTION IF EXISTS trigger_groups_before_lns ();

ALTER TABLE IF EXISTS groups
    RENAME COLUMN group_id TO dt_header_id;
    
ALTER TABLE IF EXISTS groups
	ADD CONSTRAINT groups_dt_header
	FOREIGN KEY ( dt_header_id ) REFERENCES dt_header ( dt_header_id ); 
	
	
DROP TABLE IF EXISTS dt_working_keys CASCADE;
CREATE TABLE IF NOT EXISTS dt_working_keys (
  owner_dt_id int not null, -- COMMENTS 'рабочий стол Автора', 
  worker_dt_id int not null, -- COMMENTS 'Рабочий стол, на котором будет работать owner_dt_id', 
  worker_private_key bytea NOT NULL -- COMMENTS 'приватный ключ от worker_dt_id - рабочего стола '
);
	
CREATE INDEX owner_dt_id_ind ON dt_working_keys (owner_dt_id);
CREATE INDEX worker_dt_id_ind ON dt_working_keys (worker_dt_id);

CREATE UNIQUE INDEX owner_dt_id_worker_dt_id_ind ON dt_working_keys (owner_dt_id, worker_dt_id);
	
ALTER TABLE IF EXISTS dt_working_keys
	ADD CONSTRAINT owner_dt_id_dt_header
	FOREIGN KEY ( owner_dt_id ) REFERENCES dt_header ( dt_header_id ); 

ALTER TABLE IF EXISTS dt_working_keys
	ADD CONSTRAINT worker_dt_id_dt_header
	FOREIGN KEY ( worker_dt_id ) REFERENCES dt_header ( dt_header_id ); 
	
INSERT INTO  dt_working_keys (owner_dt_id, worker_dt_id, worker_private_key) VALUES 
(1,	1, '12345');
	
	
	
	