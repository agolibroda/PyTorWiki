Права доступа


материалами сайта являются статьи, 
группы авторов, 
библиотеки статей, 
загруженные авторами файлы;


Все материалы сайта создаются Авторами;
(Автор -создатель материала так и Авторы последующих редакций; )
Авторы могут объединятся в Группы. 
(каждая группа имеет название, короткое и полное описание, список членов группы )
Материалы сайта могут объединятся в библиотеки. 
Каждая библиотека принадлежит некой группе. 


Права доступа к статьям

Субъекты: Пользователи

Объекты: Статьи; 
	Статьи могут быть «публичными»  «групповыми» и «личными».


Агрегаторы: Группы( объединяет пользователей );  Библиотеки( объединяет статьи, принадлежит группе);
	Группы могут быть «публичными» и «закрытыми» .

В группы участники принимаются только после запроса. 
В любой группе есть "АДМИН" (хотя бы один) 
Автор-создатель Группы автоматически становится АДМИНОМ этой группы.
АДМИН "принимает" участников в группу, удаляет их
Присвоить роль "АДМИНА" участнику может только "АДМИН" - похоже, "админ" это роль.

Любой участник группы может добавить Статью в бибилиотеку группы.
   

Статья имеет особое свойство «разрешения» 
    'pbl' - Публично
    'nop' - Не публично! - Открытый текст, только не публично.
    'grp' – Права определяются группой
    'sol' – Персональная статья, читать и редактировать ее может только автор. 
    
    
Группа описывается данными о пользователях, входящих в группу, и статьями, принадлежащими группе;
Одна статья моет принадлежать нескольким группам. 
в записи о принадлежности статьи есть поле «права» - там значение – или «читать» или «читать/писать» если записи нет, тогда «ой»

алгоритм проверки прав доступа:
1. статья с флагом 'pbl' - то всем пользователям можно читать и редактировать данную статью
2. статья с флагом 'nop' - просто "Не публично" - не закрываем, НО, и не показываем! Это и статьи Автора, и статьи группы.
3. статья с флагом 'sol' - не доступна никому, кроме автора. Кстати, статья ЗАКРЫТА а ключ АВТОРА!!! 
4. статья с флагом 'grp' –  статья находится в группе; статья ЗАКРЫТА ключем ГРУППЫ!!!!!!!  


и проверить, есть ли в группах запись о конкретной статье с нужным (по случаю) флагом (читать или писать) … 
ну, и действовать по полученному результату – или, отдать материал в работу, или… 


Персональный рабочий стол

Список всех статей, которые написал Автор 
или, отметил как "интересные" (ОБА-НА!!!!)
в списке НАДО показывать названия групп, в которых набраны статьи....
да и показывать разрешения для статьи  

Список Групп  - названия  - показывать все, и показывать статус группы (публ/закр) 
- в "Рабочий стол группы" закрытой группы - попасть может только участник

есть еще один аспект 
Статью можно:
- комментировать (да/нет)
- редактировать (да/нет)
- оценивать (да/нет) кстати, оценок может быть несколько 
	- и автор может выбрать какими оценками оценивать его статью (или не автор???? )  



"Святая святых" для любой информационной системы  - это база данных 
Что бы снизить моральную нагрузку на АТМИНА :-) я решил, 
что все статьи, имеющие гриф "sol" или "grp" будут в базе храниться "закрытыми" :-) 

механизм: 
при регистрации система для Автора генерирует пару RSA- ключей. :-) 
после генерации ключи рекомендуется скачать на жесткий диск локального компьютера, 
и потом, хранить на флешке в укромном месте.

 
Место хранения ключей в системе:
 
Открытый ключ хранится в поле таблицы "dt_header"

Закрытые ключи:
Все закрытые ключи храним в таблице "grups_keys";
Приватные ключи Авторов храним закрытыми на пароль автора;
Когда Автор создает группу, создается пара групповых ключей, 
приватный ключ закрывается открытым ключом Создателя и кладется в таблицу "grups_keys", открытый  - в таблицу "dt_header";
Когда в группу принимается новый автор Создатель раскрывает ГПК, закрывает его Открытым ключом Автора, 
и кладет в таблицу "grups_keys"
Автор при входе в группу получает свою копию ГПК, раскрывает своим персональным ПК, и далее, 
использует ГПК для чтения/редактирования  закрытых Групповых статей;
 

У группы много участников, и каждых должен иметь возможность 
читать групповые статьи. поэтому, я ввожу новую табличку "grups_keys" в которую для каждого 
Участника каждой группы помещается ЕГО приватный ключ группы, 
закрытый открытым ключом Автора-Участника группы. 
Раз мы уже сделали таблицу, тогда имеет смысл (для единообразия) в этой же таблице хранить и приватный ключ Автора, 
только закрыт ОН будет уже паролем Автора. 

Поскольку пароли имеют свойство забываться, то, восстановление забытого пароля 
(с учетом того, что на пароль закрывается приватный ключ.... становится архиважным делом... )

Для хранения всех приватных ключей используем таблицу "grups_keys";
которая состоит из седующих полей:
  authors_id ID Автора;
  target_id  ID Группы или, Автора (если ключ принадлежит Автору)
  private_key bytea NOT NULL 
  -- приватный ключ - он (если это ключ группы) закодирован на открытый ключ АВТОРА!!! -
  -- или, на пароль пользователя, если ключ принадлежит АВТОРУ.  
 

 



статьи с флагом "sol" перед сохранением в базу кодируется открытым ключом Автора. 
Перед редактированием статья декодируется закрытым ключом Автора, и отдается ему на редактирование.

Для статей с флагом "grp" работают ключи группы. которые генерируется при создании группы.



восстановление пароля. 
 который необходим, если пользователь забыл свой п....




и, поехали к "общим вопросам":
- общая секюрность:
пользовательские ключи (публи и приват)  в момент логина прилетют на клиента. 
и сидят там в памяти ??? (тогда нужны библиотеки работы с ключами в Ангуляре.)

далее, все, что нужно/можно наверное стоит в локалсторижже держать в закрытом виде 
(закрываем на сессионный пользовательский симетричный ключ)

сервер: 
сервер хранит... что? просто ИД?? или что-то сложнее??

пока немного идей вот тут: 
https://morioh.com/p/f17e7c518817


https://github.com/cole/tornado-sessions/blob/master/example.py

реализация сессий с хранением в редисе 
from sessions import session, SessionHandler (пи включении "tornado-sessions") 
или, что там у меня уже было??? (надо поглядеть и вспомнить!!!!) - может я в инсталл уже описал??


Что делаем с секюрностью?

Общие положения

- все, что должно быть закрыто, должно быть закрыто :-)

Сервер в работе использует “редис”, значит, все, что попадает в редис должно быть закрыто;

	при старте приложения:
	- проверяется наличие доступа к “редис” — серверу. очищаетя рабочая база редиса, 
  все клиенты вынуждены обновить сессии (перелогин.)
	-  генерится “сеансовый ключ”; ( именно этим ключом “закрывается” все, 
  что кладется в сессию, в редис. )



пока, наверное, не будем моделировать “https” и все, что можно, оставим на его совести. :-) 
значит, самые секретные секреты по сети будут летать “посто так” (под защитой самого протокола :-) “https” )  :-) 

Логин — клиент отдает на сервер логин-пароль Автора, 
сервер, при удачном логине, отдает на клиент ФИО Автора, в сессию кладет “приватный ключ”, 
ИД, UUID(Хэш) Автора. 

Работа с “личными” (sol) текстами Автора: 
- закрытый текст выбирается из базы;
- раскрывается с помощью “приватного ключа” и открытым отдается на клиента.
- при сохранении новой версии с клиента прилетает новый текст, 
текст закрывается публичным ключом Автора, текст сохраняется в базе.

Аналогично происходит работа с групповыми текстами.
Только используются “открытый-приватный” ключи группы. 
При «входе» Автора в группу, членом которой Автор является, 
из списка копий закрытого ключа группы вынимаем закрытый ключ, 
принадлежащий Автору (значит, Групповой ключ закрыт публичным ключом Автора, 
и открыт он может быть только Приватным ключом Автора!!!)  групповой ключ открывается, 
и кладется в сессию этого автора..
Когда Автор выбирает текст, имеющий гриф «grp», этот текст читается из Базы, 
открывается приватным ключом группы, который находится в сессии Автора, 
и открытым пересылается на  клиента для работы. 
Для сохранении отредактированной версии используется открытый ключ гуппы. 

 

